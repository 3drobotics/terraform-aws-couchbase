# This file can be used with Docker and Docker Compose to run this Couchbase example locally. This is solely meant to
# make testing and iterating faster and easier. See examples/local-mocks for instructions.

version: '3'
services:
  couchbase-ubuntu-0: &couchbase_config
    image: gruntwork/couchbase-ubuntu-test
    entrypoint: ["/entrypoint/entrypoint.sh"]
    container_name: couchbase-ubuntu-0

    # These are all settings required to make systemd happy
    privileged: true
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    tmpfs:
      - /run
      - /run/lock

    volumes:
      # Used for systemd
      - /sys/fs/cgroup:/sys/fs/cgroup:ro

      # Mount these scripts so we get hot reload
      - ../../../modules/bash-commons:/opt/couchbase/bash-commons
      - ../../../modules/run-couchbase-server/run-couchbase-server:/opt/couchbase/bin/run-couchbase-server
      - ../../../modules/run-sync-gateway/run-sync-gateway:/opt/couchbase-sync-gateway/bin/run-sync-gateway

      # Override scripts in bash-commons with mocks so we can run locally, without talking to AWS APIs
      - ../../local-mocks/bash-commons/aws-primitives.sh:/opt/couchbase/bash-commons/aws-primitives.sh
      - ../../local-mocks/bash-commons/mount-ebs-volume:/opt/couchbase/bash-commons/mount-ebs-volume

      # Mount the mock scripts we use to run Couchbase during Docker container boot
      - ../user-data:/user-data
      - ../../local-mocks/entrypoint:/entrypoint
      - ../../local-mocks/systemd/mock-run-couchbase-server.service:/lib/systemd/system/mock-run-couchbase-server.service
      - ../../local-mocks/systemd/mock-couchbase.env:/lib/systemd/system/mock-couchbase.env

    # Map each container to unique ports on the host. Note that you can talk to this container from your host OS via the
    # HTTP/REST APIs but NOT the Couchbase SDKs! The SDKs will try to connect to the internal node IPs, which can only
    # be accessed from within a container. Host networking would work around this, but it doesn't work, because
    # Couchbase doesn't allow all port numbers to be overridden, so the Erlang Port Mapper service clashes.
    ports:
      - "8091:8091"
      - "8092:8092"
      - "8093:8093"
      - "8094:8094"
      - "11210:11210"
      - "9998:9998"
      - "4984:4984"
      - "4985:4985"

  couchbase-ubuntu-1:
    <<: *couchbase_config
    container_name: couchbase-ubuntu-1

    ports:
      - "7091:8091"
      - "7092:8092"
      - "7093:8093"
      - "7094:8094"
      - "10210:11210"
      - "8998:9998"
      - "3984:4984"
      - "3985:4985"

  couchbase-ubuntu-2:
    <<: *couchbase_config
    container_name: couchbase-ubuntu-2

    ports:
      - "6091:8091"
      - "6092:8092"
      - "6093:8093"
      - "6094:8094"
      - "9210:11210"
      - "7998:9998"
      - "2984:4984"
      - "2985:4985"

